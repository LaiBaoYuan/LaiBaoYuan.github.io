import{_ as s,c as a,o as n,a as l}from"./app.fb84bbb4.js";const C=JSON.parse('{"title":"Sass 扩展","description":"","frontmatter":{"title":"Sass 扩展"},"headers":[],"relativePath":"notes/frontend/Sass/Sass扩展.md","lastUpdated":1677921063000}'),p={name:"notes/frontend/Sass/Sass扩展.md"},o=l(`<h2 id="forward" tabindex="-1">@forward <a class="header-anchor" href="#forward" aria-hidden="true">#</a></h2><p><code>@forward</code> 的工作原理和 <code>@use</code> 基本相同，都是用于加载文件内容的，不过 <code>@forward</code> 可以跨多个文件来组成一个 Sass 库，一般在写一个开源的 Sass 样式库的时候你可能会用到它，在项目中是不常用的。</p><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">// src/a.scss</span></span>
<span class="line"><span style="color:#FF79C6;">@mixin</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">bor</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">	</span><span style="color:#8BE9FD;">width</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">100</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">	</span><span style="color:#8BE9FD;">height</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">100</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// b.scss</span></span>
<span class="line"><span style="color:#FF79C6;">@forward</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">src/a</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// c.scss</span></span>
<span class="line"><span style="color:#FF79C6;">@use</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">b</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">li</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">	</span><span style="color:#6272A4;">// 应用 a.scss 文件中的 mixin</span></span>
<span class="line"><span style="color:#F8F8F2;">	</span><span style="color:#FF79C6;">@include</span><span style="color:#F8F8F2;"> b.</span><span style="color:#50FA7B;">bor</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="error" tabindex="-1">@error <a class="header-anchor" href="#error" aria-hidden="true">#</a></h2><p><code>@error</code> 规则在此处是第一次讲解，它是干嘛用的呢？在编写 Sass 函数或者 mixin 的时候，通常需要确保这些能提供正确的类型或者格式，如果没有的时候需要通知用户并停止函数或 mixin 的运行，这时就用到的 <code>@error </code>，我的理解是它就像我们写 javascript 时用到的 <code>throw new Error()</code></p><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">@function</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">my</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">$str</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">	</span><span style="color:#FF79C6;">@if</span><span style="color:#F8F8F2;"> $str </span><span style="color:#FF79C6;">!=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">a</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> || $str </span><span style="color:#FF79C6;">!=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">b</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">		</span><span style="color:#6272A4;">// 此处会抛出错误信息并停止函数的运行</span></span>
<span class="line"><span style="color:#F8F8F2;">		</span><span style="color:#FF79C6;">@error</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">This is a error！</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="warn" tabindex="-1">@warn <a class="header-anchor" href="#warn" aria-hidden="true">#</a></h2><p>上面我们讲了 <code>@error</code> ，<code>@warn</code> 和它的使用方式是相同的，不同的是 <code>@warn</code> 是打印信息，以及指示当前的函数或 mixin 的调用堆栈追踪，<strong>并不会停止函数或 mixin 的运行</strong></p><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">@function</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">my</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">$str</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">	</span><span style="color:#FF79C6;">@if</span><span style="color:#F8F8F2;"> $str </span><span style="color:#FF79C6;">!=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">a</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> || $str </span><span style="color:#FF79C6;">!=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">b</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">		</span><span style="color:#6272A4;">// 此处不会停止函数的运行</span></span>
<span class="line"><span style="color:#F8F8F2;">		</span><span style="color:#FF79C6;">@warn</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">This is a message！</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">	}</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="debug" tabindex="-1">@debug <a class="header-anchor" href="#debug" aria-hidden="true">#</a></h2><p>一看这个 debug 我们就知道，它是用来调试的，在 javascript 中也是这样。在 Sass 中我们可以使用 <code>@debug</code> 来打印表达式的值以及文件名和行号，这仅是在你开发时期调试用，对实际的样式并没有什么太大的帮助，你只要记住需要调试 Sass 代码就用它，不过一般我们在实际的项目中使用它是很少很少的。</p><h2 id="at-root" tabindex="-1">@at-root <a class="header-anchor" href="#at-root" aria-hidden="true">#</a></h2><p>回一下前面的章节中我们讲解的 Sass 嵌套，很常用的功能。在使用嵌套的时候你可以使用 @at-root 取消嵌套规则</p><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki dracula"><code><span class="line"><span style="color:#50FA7B;font-style:italic;">.a</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">width</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">300</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;font-style:italic;">.b</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;">width</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">200</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;font-style:italic;">.c</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;">width</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">100</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#6272A4;">// 取消嵌套规则</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">@at-root</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">.f</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#8BE9FD;">width</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">20</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">// 取消嵌套规则</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">@at-root</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">.e</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;">width</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">50</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><details class="details custom-block"><summary>点击查看编译</summary><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula has-highlighted-lines"><code><span class="line"><span style="color:#50FA7B;font-style:italic;">.a</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">width</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">300</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#50FA7B;font-style:italic;">.a</span><span style="color:#FF79C6;"> </span><span style="color:#50FA7B;font-style:italic;">.b</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">width</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">200</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#50FA7B;font-style:italic;">.a</span><span style="color:#FF79C6;"> </span><span style="color:#50FA7B;font-style:italic;">.c</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">width</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">100</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#50FA7B;font-style:italic;">.f</span><span style="color:#F8F8F2;">{</span></span>
<span class="line highlighted"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">width</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">20</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line highlighted"><span style="color:#F8F8F2;">}</span></span>
<span class="line highlighted"><span style="color:#50FA7B;font-style:italic;">.e</span><span style="color:#F8F8F2;">{</span></span>
<span class="line highlighted"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">width</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">50</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line highlighted"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div></details>`,15),F=[o];function e(c,t,r,y,i,d){return n(),a("div",null,F)}const u=s(p,[["render",e]]);export{C as __pageData,u as default};
